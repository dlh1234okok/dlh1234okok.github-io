<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>这夜景</title>
  
  <subtitle>blog</subtitle>
  <link href="/dlh1234okok.github.io/atom.xml" rel="self"/>
  
  <link href="http://www.dlhblog.online/"/>
  <updated>2018-10-04T05:27:41.463Z</updated>
  <id>http://www.dlhblog.online/</id>
  
  <author>
    <name>li-hong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用poi读取Excel和写出Excel</title>
    <link href="http://www.dlhblog.online/2018/10/04/%E4%BD%BF%E7%94%A8poi%E8%AF%BB%E5%8F%96Excel%E5%92%8C%E5%86%99%E5%87%BAExcel/"/>
    <id>http://www.dlhblog.online/2018/10/04/使用poi读取Excel和写出Excel/</id>
    <published>2018-10-04T05:23:47.000Z</published>
    <updated>2018-10-04T05:27:41.463Z</updated>
    
    <content type="html"><![CDATA[<item><title>使用poi读取Excel和写出Excel</title><br><br>本次使用到的jar包<br><br>　　　<img src="https://img2018.cnblogs.com/blog/1467494/201810/1467494-20181003113303750-1452640323.png" alt=""><br><br>　　<img src="https://img2018.cnblogs.com/blog/1467494/201810/1467494-20181003113216920-1383675369.png" alt=""><br><br>　　&nbsp;<img src="https://img2018.cnblogs.com/blog/1467494/201810/1467494-20181003113236382-1307387438.png" alt=""><br><br>&nbsp;<br><br><strong>1、从数据库读取数据写出到Excel</strong><br><br><div class="cnblogs_code"><br><pre><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> CreateExcel01 {<br><br>    </span><span style="color: #008000;">//</span><span style="color: #008000;"> 数据库查询</span><br>    <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span> List&lt;Account&gt;<span style="color: #000000;"> query() {<br>        String sql </span>= “select <em> from tb_account”<span style="color: #000000;">;<br>        List</span>&lt;Account&gt; list = BaseDao.findRows(sql, <span style="color: #0000ff;">null</span>, Account.<span style="color: #0000ff;">class</span><span style="color: #000000;">);<br>        </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> list;<br>    }<br><br>    </span><span style="color: #008000;">//</span><span style="color: #008000;"> 创建Excel</span><br>    <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> createExcel(){<br>        </span><span style="color: #0000ff;">try</span><span style="color: #000000;"> {<br>            </span><span style="color: #008000;">//</span><span style="color: #008000;"> 获取桌面路径</span><br>            FileSystemView fsv =<span style="color: #000000;"> FileSystemView.getFileSystemView();<br>            String desktop </span>=<span style="color: #000000;"> fsv.getHomeDirectory().getPath();<br>            String filePath </span>= desktop + “/account.xls”<span style="color: #000000;">;<br><br>            File file </span>= <span style="color: #0000ff;">new</span><span style="color: #000000;"> File(filePath);<br>            OutputStream outputStream </span>= <span style="color: #0000ff;">new</span><span style="color: #000000;"> FileOutputStream(file);<br>            HSSFWorkbook workbook </span>= <span style="color: #0000ff;">new</span><span style="color: #000000;"> HSSFWorkbook();<br>            </span><span style="color: #008000;">//</span><span style="color: #008000;"> 创建一个工作表</span><br>            HSSFSheet sheet = workbook.createSheet(“Sheet1”<span style="color: #000000;">);<br>            </span><span style="color: #008000;">//</span><span style="color: #008000;"> 创建首行/头（第0行开始）</span><br>            HSSFRow head = sheet.createRow(0<span style="color: #000000;">);<br>            String[] header </span>= <span style="color: #0000ff;">new</span> String[]{“账户id”,”账户名称”,”账户类型”,”账户金额”,”账户备注”,”创建时间”,”用户id”,”更新时间”<span style="color: #000000;">};<br>            </span><span style="color: #0000ff;">for</span> (<span style="color: #0000ff;">int</span> i=0;i&lt;header.length;i++<span style="color: #000000;">){<br>                </span><span style="color: #008000;">//</span><span style="color: #008000;"> 设置首行信息</span><br><span style="color: #000000;">                head.createCell(i).setCellValue(header[i]);<br>​            }<br>​            head.setHeightInPoints(</span>20); <span style="color: #008000;">//</span><span style="color: #008000;"> 设置行的高度<br><br>            </span><span style="color: #008000;">//</span><span style="color: #008000;"> 从数据查询返回的集合</span><br>            List&lt;Account&gt; accounts=<span style="color: #000000;">query();<br><br>            </span><span style="color: #008000;">//</span><span style="color: #008000;"> 日期格式化</span><br>            HSSFCellStyle cellStyle2 =<span style="color: #000000;"> workbook.createCellStyle();<br>            HSSFCreationHelper creationHelper </span>=<span style="color: #000000;"> workbook.getCreationHelper();<br>            </span><span style="color: #008000;">//</span><span style="color: #008000;"> 设置日期格式</span><br>            cellStyle2.setDataFormat(creationHelper.createDataFormat().getFormat(“yyyy-MM-dd HH:mm:ss”<span style="color: #000000;">));<br>            sheet.setColumnWidth(</span>3, 15 </em> 256<span style="color: #000000;">);<br>            sheet.setColumnWidth(</span>5, 20 <em> 256<span style="color: #000000;">);<br>            sheet.setColumnWidth(</span>7, 20 </em> 256);<span style="color: #008000;">//</span><span style="color: #008000;"> 设置列的宽度<br><br>            </span><span style="color: #008000;">//</span><span style="color: #008000;"> 保留两位小数</span><br>            HSSFCellStyle cellStyle3 =<span style="color: #000000;"> workbook.createCellStyle();<br>            cellStyle3.setDataFormat(HSSFDataFormat.getBuiltinFormat(</span>“0.00”<span style="color: #000000;">));<br><br>            </span><span style="color: #0000ff;">for</span>(<span style="color: #0000ff;">int</span> i=0;i&lt;accounts.size();i++<span style="color: #000000;">) {<br>                </span><span style="color: #008000;">//</span><span style="color: #008000;"> 创建行（从第一行开始）</span><br>                HSSFRow row1 = sheet.createRow(i + 1<span style="color: #000000;">);<br>                </span><span style="color: #008000;">//</span><span style="color: #008000;"> id</span><br>                row1.createCell(0<span style="color: #000000;">).setCellValue(accounts.get(i).getId());<br>                </span><span style="color: #008000;">//</span><span style="color: #008000;"> 账户名称</span><br>                row1.createCell(1<span style="color: #000000;">).setCellValue(accounts.get(i).getAccountName());<br>                </span><span style="color: #008000;">//</span><span style="color: #008000;"> 账户类型</span><br>                row1.createCell(2<span style="color: #000000;">).setCellValue(accounts.get(i).getAccountType());<br><br>                </span><span style="color: #008000;">//</span><span style="color: #008000;"> 账户金额（保留两位小数）</span><br>                HSSFCell money = row1.createCell(3<span style="color: #000000;">);<br>                money.setCellStyle(cellStyle3);<br>                money.setCellValue(accounts.get(i).getMoney());<br><br>                </span><span style="color: #008000;">//</span><span style="color: #008000;"> 账户备注</span><br>                row1.createCell(4<span style="color: #000000;">).setCellValue(accounts.get(i).getRemark());<br><br>                </span><span style="color: #008000;">//</span><span style="color: #008000;"> 创建时间（格式化时间）</span><br>                HSSFCell date1 = row1.createCell(5<span style="color: #000000;">);<br>                date1.setCellStyle(cellStyle2);<br>                date1.setCellValue(accounts.get(i).getCreateTime());<br><br>                </span><span style="color: #008000;">//</span><span style="color: #008000;"> 用户id</span><br>                row1.createCell(6<span style="color: #000000;">).setCellValue(accounts.get(i).getUid());<br><br>                </span><span style="color: #008000;">//</span><span style="color: #008000;"> 更新时间</span><br>                HSSFCell date2 = row1.createCell(7<span style="color: #000000;">);<br>                date2.setCellStyle(cellStyle2);<br>                date2.setCellValue(accounts.get(i).getUpdateTime());<br>            }<br>            workbook.setActiveSheet(</span>0<span style="color: #000000;">);<br>            workbook.write(outputStream);<br>            outputStream.close();<br>        } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (IOException e1) {<br>            e1.printStackTrace();<br>        }<br>    }<br>}</span></pre><br></div><br><br>&nbsp;<br><br>&nbsp;<br><br><strong>2、从Excel读取写入到数据库</strong><br><br><div class="cnblogs_code"><br><pre><span style="color: #0000ff;">package</span><span style="color: #000000;"> com.shsxt;<br><br></span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.apache.commons.lang3.time.DateFormatUtils;<br></span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.apache.poi.hssf.usermodel.HSSFCell;<br></span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.apache.poi.hssf.usermodel.HSSFDataFormat;<br></span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.apache.poi.hssf.usermodel.HSSFDateUtil;<br></span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.apache.poi.hssf.usermodel.HSSFWorkbook;<br></span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.apache.poi.ss.formula.functions.Rows;<br></span><span style="color: #0000ff;">import</span> org.apache.poi.ss.usermodel.<em><span style="color: #000000;">;<br></span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.apache.poi.xssf.usermodel.XSSFWorkbook;<br><br></span><span style="color: #0000ff;">import</span><span style="color: #000000;"> java.io.File;<br></span><span style="color: #0000ff;">import</span><span style="color: #000000;"> java.io.FileInputStream;<br></span><span style="color: #0000ff;">import</span><span style="color: #000000;"> java.io.IOException;<br></span><span style="color: #0000ff;">import</span><span style="color: #000000;"> java.text.DateFormat;<br></span><span style="color: #0000ff;">import</span><span style="color: #000000;"> java.text.SimpleDateFormat;<br></span><span style="color: #0000ff;">import</span><span style="color: #000000;"> java.util.ArrayList;<br></span><span style="color: #0000ff;">import</span><span style="color: #000000;"> java.util.Date;<br></span><span style="color: #0000ff;">import</span><span style="color: #000000;"> java.util.Iterator;<br></span><span style="color: #0000ff;">import</span><span style="color: #000000;"> java.util.List;<br><br></span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> ReadExcelToDB {<br><br>    </span><span style="color: #0000ff;">public</span> List&lt;List&lt;Object&gt;&gt;<span style="color: #000000;"> importExcel(File file) {<br>        List</span>&lt;List&lt;Object&gt;&gt; dataList = <span style="color: #0000ff;">null</span><span style="color: #000000;">;<br>        </span><span style="color: #0000ff;">try</span><span style="color: #000000;"> {<br>            dataList </span>= <span style="color: #0000ff;">new</span> ArrayList&lt;List&lt;Object&gt;&gt;<span style="color: #000000;">();<br>            </span><span style="color: #008000;">//</span><span style="color: #008000;"> Excel对象</span><br>            Workbook workbook = <span style="color: #0000ff;">null</span><span style="color: #000000;">;<br>            </span><span style="color: #008000;">//</span><span style="color: #008000;"> 获取文件名</span><br>            String fileName =<span style="color: #000000;"> file.getName().toLowerCase();<br><br>            </span><span style="color: #008000;">//</span><span style="color: #008000;"> 判断后缀</span><br>            <span style="color: #0000ff;">if</span> (fileName.endsWith(“xls”<span style="color: #000000;">)) {<br>                workbook </span>= <span style="color: #0000ff;">new</span> HSSFWorkbook(<span style="color: #0000ff;">new</span><span style="color: #000000;"> FileInputStream(file));<br>            } </span><span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span> (fileName.endsWith(“xlsx”<span style="color: #000000;">)) {<br>                workbook </span>= <span style="color: #0000ff;">new</span> XSSFWorkbook(<span style="color: #0000ff;">new</span><span style="color: #000000;"> FileInputStream(file));<br>            } </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {<br>                </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span> RuntimeException(“该文件不是Excel文件”<span style="color: #000000;">);<br>            }<br><br>            </span><span style="color: #008000;">//</span><span style="color: #008000;"> 获取Excel中的第一个表格</span><br>            Sheet sheet = workbook.getSheet(“Sheet1”<span style="color: #000000;">);<br>            </span><span style="color: #008000;">//</span><span style="color: #008000;"> 得到表格中的数据的行数，最后一行</span><br>            <span style="color: #0000ff;">int</span> rows =<span style="color: #000000;"> sheet.getLastRowNum();<br>            </span><span style="color: #0000ff;">if</span> (rows == 0<span style="color: #000000;">) {<br>                </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span> RuntimeException(“表格中没有数据”<span style="color: #000000;">);<br>            }<br><br>            Row row </span>= <span style="color: #0000ff;">null</span>; <span style="color: #008000;">//</span><span style="color: #008000;">行对象</span><br>            Iterator&lt;Cell&gt; cols = <span style="color: #0000ff;">null</span>; <span style="color: #008000;">//</span><span style="color: #008000;"> 列对象的迭代器</span><br>            List&lt;Object&gt; list = <span style="color: #0000ff;">null</span><span style="color: #000000;">;<br><br>            </span><span style="color: #0000ff;">for</span> (<span style="color: #0000ff;">int</span> i = 1; i &lt;= rows; i++<span style="color: #000000;">) {<br>                row </span>= sheet.getRow(i); <span style="color: #008000;">//</span><span style="color: #008000;"> 获取第i行</span><br>                <span style="color: #0000ff;">if</span> (row != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {<br>                    cols </span>= row.cellIterator(); <span style="color: #008000;">//</span><span style="color: #008000;"> 获取该行的迭代器</span><br>                    list = <span style="color: #0000ff;">new</span> ArrayList&lt;Object&gt;<span style="color: #000000;">();<br>                    </span><span style="color: #0000ff;">while</span><span style="color: #000000;"> (cols.hasNext()) {<br>                        </span><span style="color: #008000;">//</span><span style="color: #008000;"> 循环获取每一列数据存到list中</span><br><span style="color: #000000;">                        list.add(getCellObj(cols.next()));<br>​                    }<br>​                    </span><span style="color: #008000;">//</span><span style="color: #008000;"> 将这行数据存到集合dataList中</span><br><span style="color: #000000;">                    dataList.add(list);<br>​                }<br>​            }<br>​        } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (IOException e) {<br>​            e.printStackTrace();<br>​        }<br>​        </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> dataList;<br>​    }<br><br>    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> Object getCellObj(Cell cell) {<br>        </span><span style="color: #0000ff;">if</span> (cell == <span style="color: #0000ff;">null</span><span style="color: #000000;">) {<br>            </span><span style="color: #0000ff;">return</span> “”<span style="color: #000000;">;<br>        }<br>        Object cellObj;<br><br>        </span><span style="color: #0000ff;">switch</span><span style="color: #000000;"> (cell.getCellType()) {<br>            </span><span style="color: #0000ff;">case</span> HSSFCell.CELL_TYPE_STRING: <span style="color: #008000;">//</span><span style="color: #008000;">字符串</span><br>                cellObj =<span style="color: #000000;"> cell.getStringCellValue();<br>                </span><span style="color: #0000ff;">break</span><span style="color: #000000;">;<br>            </span><span style="color: #0000ff;">case</span> HSSFCell.CELL_TYPE_NUMERIC: <span style="color: #008000;">//</span><span style="color: #008000;">数字<br>                </span><span style="color: #008000;">//</span><span style="color: #008000;"> poi把日期类型也归为数字类型</span><br>                <span style="color: #0000ff;">if</span><span style="color: #000000;"> (HSSFDateUtil.isCellDateFormatted(cell)){<br>                    </span><span style="color: #008000;">//</span><span style="color: #008000;"> 获取日期对象并格式化</span><br>                    Date date=<span style="color: #000000;">cell.getDateCellValue();<br>                    cellObj</span>= DateFormatUtils.format(date,”yyyy-MM-dd”<span style="color: #000000;">);<br>                } </span><span style="color: #0000ff;">else</span><span style="color: #000000;">{<br>                    </span><span style="color: #008000;">/</span></em><span style="color: #008000;">CellStyle cellStyle=cell.getCellStyle();<br>                    cellStyle.setDataFormat(HSSFDataFormat.getBuiltinFormat(“0”));</span><span style="color: #008000;">*/</span><span style="color: #000000;"><br>                    cellObj </span>=<span style="color: #000000;"> cell.getNumericCellValue();<br>                }<br>                </span><span style="color: #0000ff;">break</span><span style="color: #000000;">;<br>            </span><span style="color: #0000ff;">case</span> HSSFCell.CELL_TYPE_BOOLEAN: <span style="color: #008000;">//</span><span style="color: #008000;">boolean</span><br>                cellObj =<span style="color: #000000;"> cell.getBooleanCellValue();<br>                </span><span style="color: #0000ff;">break</span><span style="color: #000000;">;<br>            </span><span style="color: #0000ff;">case</span> HSSFCell.CELL_TYPE_FORMULA: <span style="color: #008000;">//</span><span style="color: #008000;">公式</span><br>                cellObj =<span style="color: #000000;"> cell.getCellFormula();<br>                </span><span style="color: #0000ff;">break</span><span style="color: #000000;">;<br>            </span><span style="color: #0000ff;">case</span> HSSFCell.CELL_TYPE_BLANK: <span style="color: #008000;">//</span><span style="color: #008000;">空</span><br>                cellObj = “”<span style="color: #000000;">;<br>                </span><span style="color: #0000ff;">break</span><span style="color: #000000;">;<br>            </span><span style="color: #0000ff;">case</span> HSSFCell.CELL_TYPE_ERROR: <span style="color: #008000;">//</span><span style="color: #008000;">错误</span><br>                cellObj = “”<span style="color: #000000;">;<br>                </span><span style="color: #0000ff;">break</span><span style="color: #000000;">;<br>            </span><span style="color: #0000ff;">default</span><span style="color: #000000;">:<br>                cellObj</span>=””<span style="color: #000000;">;<br>                </span><span style="color: #0000ff;">break</span><span style="color: #000000;">;<br>        }<br>        </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> cellObj;<br>    }<br>}<br><br></span><span style="color: #0000ff;">class</span><span style="color: #000000;"> Test {<br>​    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> main(String[] args) {<br>​        File file </span>= <span style="color: #0000ff;">new</span> File(“C:\Users\Administrator\Desktop\no1.xls”<span style="color: #000000;">);<br>​        ReadExcelToDB readExcelToDB </span>= <span style="color: #0000ff;">new</span><span style="color: #000000;"> ReadExcelToDB();<br>​        List</span>&lt;List&lt;Object&gt;&gt; lists=<span style="color: #000000;">readExcelToDB.importExcel(file);<br>​        </span><span style="color: #0000ff;">for</span> (List&lt;Object&gt;<span style="color: #000000;"> ObjList:lists){<br>​            </span><span style="color: #0000ff;">for</span><span style="color: #000000;"> (Object object:ObjList){<br>​                System.out.println(object);<br>​            }<br>　　　　　　 System.out.println(“<strong><strong>__</strong></strong>“);　　<br>​        }<br>​    }<br>}</span></pre><br></div><br><br>&nbsp;<br><br>读取的结果是：<br><br><img src="https://img2018.cnblogs.com/blog/1467494/201810/1467494-20181003114043342-762137111.png" alt=""><br><br>&nbsp;<br><br>调用数据库插入就可以往插入到数据库了<br></item>]]></content>
    
    <summary type="html">
    
      
      
        &lt;item&gt;&lt;title&gt;使用poi读取Excel和写出Excel&lt;/title&gt;&lt;br&gt;&lt;br&gt;本次使用到的jar包&lt;br&gt;&lt;br&gt;　　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/1467494/201810/1467494-2018
      
    
    </summary>
    
      <category term="poi" scheme="http://www.dlhblog.online/categories/poi/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello Hexo</title>
    <link href="http://www.dlhblog.online/2018/10/03/hello-hexo/"/>
    <id>http://www.dlhblog.online/2018/10/03/hello-hexo/</id>
    <published>2018-10-03T06:25:42.806Z</published>
    <updated>2018-10-04T05:47:07.004Z</updated>
    
    <content type="html"><![CDATA[<p>​    花了一天半时间终于把这个博客建好了，中间遇到了很多坑，网上搜了大量资源，略有不足，以后想到了再改改漂亮吧。</p><p>​    贴一下我看的各位博主写的教程链接，方便以后出现问题可以解决。</p><p>​    1、这是我看的第一篇，初次接触给我帮助很大</p><p>​    <a href="https://blog.csdn.net/dgut_guangdian/article/details/79326107" target="_blank" rel="noopener">https://blog.csdn.net/dgut_guangdian/article/details/79326107</a></p><p>​    2、这几篇修改了next主题样式，添加了些好玩的东西</p><p>​    <a href="https://blog.csdn.net/zhy421202048/article/details/77877580" target="_blank" rel="noopener">https://blog.csdn.net/zhy421202048/article/details/77877580</a></p><p>​    <a href="https://blog.csdn.net/w_ngzeqi/article/details/73863543" target="_blank" rel="noopener">https://blog.csdn.net/w_ngzeqi/article/details/73863543</a></p><p>​    <a href="https://blog.csdn.net/csdnSR/article/details/78300820" target="_blank" rel="noopener">https://blog.csdn.net/csdnSR/article/details/78300820</a></p><p>​    <a href="https://www.jianshu.com/p/3a05351a37dc" target="_blank" rel="noopener">https://www.jianshu.com/p/3a05351a37dc</a></p><p>​    </p><p>​    3、在添加gitment评论时对我有帮助的（但我好像至今无法使用…）</p><p>​    <a href="https://www.cnblogs.com/pangguoming/p/8094815.html" target="_blank" rel="noopener">https://www.cnblogs.com/pangguoming/p/8094815.html</a></p><p>​    <a href="https://www.jianshu.com/p/57afa4844aaa" target="_blank" rel="noopener">https://www.jianshu.com/p/57afa4844aaa</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;​    花了一天半时间终于把这个博客建好了，中间遇到了很多坑，网上搜了大量资源，略有不足，以后想到了再改改漂亮吧。&lt;/p&gt;
&lt;p&gt;​    贴一下我看的各位博主写的教程链接，方便以后出现问题可以解决。&lt;/p&gt;
&lt;p&gt;​    1、这是我看的第一篇，初次接触给我帮助很大&lt;/
      
    
    </summary>
    
    
  </entry>
  
</feed>
